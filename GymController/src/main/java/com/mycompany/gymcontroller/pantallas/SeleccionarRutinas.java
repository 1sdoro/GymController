/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.gymcontroller.pantallas;

/**
 *
 * @author William Arias
 */

import com.mycompany.gymcontroller.controllers.EjercicioController;
import com.mycompany.gymcontroller.modelo.Ejercicio;
import com.mycompany.gymcontroller.modelo.Rutina;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

public class SeleccionarRutinas extends javax.swing.JPanel {

    private final EjercicioController ejercicioController;
    private List<Ejercicio> ejerciciosSeleccionados;
    


    public SeleccionarRutinas(EjercicioController ejercicioController) {
        initComponents();
        this.ejercicioController = ejercicioController;
        jTableEjercicios = new javax.swing.JTable();

        // Inicializar la lista de ejercicios seleccionados desde el controlador
        this.ejerciciosSeleccionados = ejercicioController.obtenerEjercicios();

        // Verificar si hay ejercicios para cargar
        if (ejerciciosSeleccionados == null || ejerciciosSeleccionados.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay ejercicios disponibles para mostrar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        } else {
            cargarEjerciciosEnTabla();
        }
    }

    SeleccionarRutinas(List<Ejercicio> ejerciciosSeleccionados) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEjercicios = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        jLabel1.setText("Lista de Rutinas");

        jTableEjercicios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableEjercicios);

        jButton1.setText("Procesar Selección");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (ejerciciosSeleccionados == null || ejerciciosSeleccionados.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay ejercicios seleccionados para procesar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Ejercicios procesados con éxito.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableEjercicios;
    // End of variables declaration//GEN-END:variables

    private void cargarEjerciciosEnTabla() {
    // Suponiendo que tienes una lista de ejercicios
    List<Ejercicio> ejercicios = obtenerEjercicios();  // Aquí obtienes los ejercicios, asegúrate de tener este método
    
    // Asumiendo que tienes un modelo de tabla
    DefaultTableModel model = (DefaultTableModel) jTableEjercicios.getModel();  // Cambié tablaEjercicios por jTableEjercicios
    
    // Limpiar la tabla antes de agregar nuevos datos
    model.setRowCount(0);

    // Añadir los ejercicios a la tabla
    for (Ejercicio ejercicio : ejercicios) {
        // Añadir cada ejercicio a la tabla
        model.addRow(new Object[]{ejercicio.getNombre(), ejercicio.getCategoria()});
    }
}

    private List<Ejercicio> obtenerEjercicios() {
    return ejercicioController.obtenerEjercicios();
}
}
